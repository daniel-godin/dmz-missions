:root {
  /* CSS Variables */
  /* Realtime Colors link for selected colors: https://realtimecolors.com/?colors=f8f7fd-000000-1ba8d0-ffffff-0f5f75 */
  /* Dark Theme Color Variables */
  --color-primary: rgb(248, 247, 253);
  --color-secondary: rgb(0, 0, 0);
  --color-btn-primary:  rgb(27, 168, 208);
  --color-btn-secondary: rgb(255, 255, 255);
  --color-accent:  rgb(15, 95, 117);

  /* Other Variables */
  /* Dark Theme Color Variables.  Need to add a kind of 'switch' later. */
  --color-bg-color: var(--color-secondary);
  --color-font-color: var(--color-primary);
  --color-content-bg-color: rgba(51, 51, 51, 0.8);
  --color-tier-header: salmon;


  /* Font Variables */
  font-size: 16px;
  /* Other Root Items */
}

p {
  color: var(--color-font-color);
}

/* Class Selectors */
#dmzMissionsContainer {
  width: 95%;
  height: min-content;
  display: grid;
  grid-template-columns:  repeat(auto-fill, minmax(300px, 1fr));
  gap: .5rem;
  /* border: 2px solid red; */
  justify-self: center;
  justify-items: center;
}

#missionsCompleteContainer {
  border: 1px solid var(--color-accent);
  border-radius: 10px;
  left: 5%;
  padding: .5rem;
  width: fit-content;
  background-color: var(--color-content-bg-color);
  color: var(--color-font-color);
  text-decoration: none;
  display: flex;
  flex-flow: row nowrap;
  gap: 5px;
}

.faction-container {
  border: 1px solid var(--color-accent);
  border-radius: 10px;
  padding: .25rem;
  display: grid;
  align-content: start; /* This makes sure each faction column doesn't "spread" out top to bottom when one faction or another gets really tall. */
  gap: .5rem;
  min-width: 300px;
  width: 100%;
}

.tier-container {
  /* border: 1px solid salmon; */
  border-radius: 10px;
  background-color: var(--color-content-bg-color);
  display: grid;
  width: 100%;
  height: min-content;
  padding: .5rem;
  /* row-gap: 1rem; */
  /* height: 200px; */
  /* height: min-content; */
}

.tier-header-container {
  /* border-bottom: 1px solid orange; */
  background-color: var(--color-bg-color);
  border-radius: 10px;
  padding: .6rem;
  display: flex;
  justify-content: space-between;
}

.tier-header {
  color: var(--color-tier-header);
  font-size: 1.2rem;
  cursor: pointer;
  text-align: center;
}

.tier-header:hover {
  text-decoration: underline;
}

.tier-horizontal-rule {
  width: 90%;
  margin: none;
  color: var(--color-accent);
  size: 10;
}

.missions-container {
  /* border: 1px solid brown; */
  display: grid;
  gap: .5rem;
  padding: .5rem;
  padding-top: 1rem;
}

/* The logged in and out versions will need to be different.  Logged in includes checkboxes. */
.mission-container {
  display: grid;
  grid-template-columns: 1fr;
  justify-content: center;
  align-items: center;
  row-gap: 5px;
  padding: 3px;
}

.mission-container-active {
  background-color: var(--color-bg-color);
  border-radius: 10px;
  padding: 10px;
}

.green {
  background-color: green;
  border-radius: 5px;
}

.mission-header-container {
  display: flex;
  justify-content: space-between;
}

.mission-title {
  color: var(--color-font-color);
  font-size: 1.1rem;
  cursor: pointer;
}

.mission-title:hover {
  text-decoration: underline;
  
}

/* .mission-locked {x
  color: grey;
} */

.mission-progress-checkbox {

}

.mission-unlocked-incomplete-checkbox {
  outline: 2px solid grey;
}

.mission-locked-checkbox {
  outline: 2px solid red;
  /* Need to create a nicely styled 'Locked" button/display. */
}

.mission-progress-checkbox:checked {
  outline: 2px solid yellow;
}

.mission-details {
  display: grid;
  justify-self: center;
  width: 95%;
  row-gap: 10px;
}

.objectives-container {
  display: grid;
  gap: 10px;
}

.objectives-container, .mission-description {
  background-color: var(--color-content-bg-color);
  border-radius: 5px;
  padding: 5px;
}

.objective-container-logged-out {
  display: grid;
  grid-template-columns: 1fr;
  align-items: center;
  gap: 10px;
}

.objective-container {
  display: grid;
  grid-template-columns: minmax(15px, min-content) minmax(30px, min-content) 1fr;
  align-items: center;
  gap: 10px;
}

.objective-text {
  color: var(--color-font-color);
}

.underlined {
  text-decoration: underline;
}

.underlined::after {
  content: ":";
}

.underlined:hover {
  text-decoration: none;
}

/* Keep This LAST -- Possibly use a unique toggle class for this particular page. */
.hide {
  /* This class is for toggling display none to hide something from user or showing it. */
  display: none; /* Default: display none.  When clicked by user changes to 'block' for now.  If I create a grid or flex, change it to that */
}